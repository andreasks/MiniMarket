<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAs8AAALPAHkfBOWAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAAAQxJREFUSEvtlcFqwkAURaNtMfv+fJfWgm6qK60/4v+k58gbGCEdJ3WQ
        FjxwIcl7991MZiDdg//JMAyv6Cluq8HzrDduy0TICa1RdRi9hmzCez3M4egDyRa9ROlH6FmgvQbQW/eC
        NoZBimHUfheS0BBGGQ3j2W0hCY0xQC7CuG4TknBADJJzGGobkmCQw3dOBU+jp0uqDsskGJivTNqtJMeh
        6N2EYInaBjkQpdXkn26Fmu6PeyFvaIbmyBXJJ7ptnxiQn65zSJSs5WH2LKI0DY3o4BS4CEnwLA+zd1oY
        hh596YbRkAS1PExPH6UyNqKjLiiGJOjJw/ReD6PpPr8JsRFNPrZ46n98D/4YXfcNiA0LxbkhMcEAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwbQAA8G0ACfBtABTwbQAQ8G0ABPBt
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPBtAADwbQAB8G0ADfBtABTwbQAN8G0AAvBtAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8GwAAPBtABrwbQBv8G0An/Bt
        AJHwbQBI8GwACPBsAAAAAAAAAAAAAAAAAADwbQAA8G0AAvBtAC7wbQCE8G0Ao/BtAITwbQA08GoAAvBs
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPBvAADwbwAO8G4AmfBt
        AL7wbQCM8G0AoPBuAMPwbgBT8HAAAPBRAAAAAAAAAAAAAPBvAAHwbwAp8G4AuvBtAK/wbQCJ8G0AsfBu
        ALPwbgAz8G8AAPBrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwcwAA8HMAFPBy
        AGrwcQDE8HAALfBmAADwcAAK8HEAdvByALrwdABG8HQAPfB0AD7wdAA+8HQAQPByAJzwcQCq8HAAEvBw
        AADwcAAa8HEAn/BxAIrwdgAE8HMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8HcAAPB3
        ACPwdgCG8HUA1/B1AJ/wdQAP8HUAAPB1AADwdQA/8HUA3PB1AL/wdQCu8HUAr/B1AK/wdQCw8HUA5PB1
        AG7wdQAE8HUAAPB2AADwdQBu8HUApPB1ABPwdQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPB5
        AADwewAD8HkAiPB4AKbweACE8HkAwfB7ADLwfwAA8HsACvB6AHfweQC88HcATfB3AEXwdwBG8HcARvB3
        AEjweQCe8HoAqvB7ABbwegAA8HsAGvB6AKDweQCL8HUABfB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8H0AAPB9ABrwfACv8HwAVvB7AAvwfACY8H4AtfB+AIXwfgCY8H0AvPB8AFXwfAAAAAAAAAAA
        AAAAAAAA8HwAAfB8ACvwfQC28H4ApvB+AIPwfgCo8H0Ar/B8ADXwewAA8P8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADwgQAA8IEAMPCBALHwgQBF8IEAAPB/AB/wfwBq8H8AkvB/AIXwfgBF8IAACPB/
        AAAAAAAAAAAAAAAAAADwfgAA8H4AAvB+ADHwfwB78IAAlPB/AHrwfgAx8H8AAvB+AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCFAADwhQBG8IQAtPCEAD3whAAA8IIAAPCCAAbwggAW8IIAEPCC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwgQAA8IEAAfCBAAvwggAW8IIADPCCAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8IgAAPCIAFnwiACu8IgAN/CQAATwjAAI8I0AB/CP
        AAbwjgAG8IwAB/CMAAjwjAAI8IwACPCMAAjwjAAI8IwACPCMAAjwjAAI8I4AB/CPAAbwjgAF8IwAA/CO
        AADwjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCOAADwjAAA8IwAYfCMANPwjACu8IwAm/CM
        AJzwjACc8IwAnPCMAJzwjACc8IwAnPCMAJzwjACc8IwAnPCMAJzwjACc8IwAnPCMAJzwjACd8IwAmPCM
        AIHwjQBL8I8AF/COAAPwjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8JEAAPCPAADwjwBw8I8AvfCP
        AIfwjwB88I8AffCPAH3wjwB98I8AffCPAH3wjwB98I8AffCPAH3wjwB98I8AffCPAH3wjwB98I8AffCP
        AH3wjwCE8I8AofCPAMjwkACw8JEAQ/CVAAXwkwAAAAAAAAAAAAAAAAAAAAAAAAAAAADwlAAA8F4AAPCT
        AIXwkwCD8JIADfCNAALwjwAD8I8AA/CPAAPwjwAD8I8AA/CPAAPwjAAC8IoAA/CMAAHwjwAC8I8AA/CP
        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
        H/jj/x//w/8f/wP/H/8H/x//D/8f////H/8=
</value>
  </data>
</root>